{"version":3,"sources":["reducer/DialogsReducer.js","assets/myface.jpg","components/Login/Login.jsx","api/api.js","assets/preloader.svg","components/hoc/AuthRedirect.js","components/Navbar/Navbar.module.css","reducer/AuthReducer.js","components/commons/FormsControls/FormControls.js","serviceWorker.js","reducer/sidebarReducer.js","utils/helper/ojects-helper.js","reducer/UsersReducer.js","reducer/AppReducer.js","redux/reduxStore.js","components/Navbar/Navbar.jsx","components/commons/Pagunator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/Users/UsersSelectors.js","components/Users/UsersContainer.js","components/Header/Header.jsx","components/Header/HeaderContainer.js","components/Login/LoginContainer.js","components/hoc/withSuspense.js","App.js","components/Profile/ProfileInfo/ProfileStatus.js","index.js","utils/validators/validators.js","components/commons/FormsControls/FormControl.module.css","components/commons/Preloader/preloader.js","components/Users/User.module.css","components/commons/Pagunator/paginator.module.css","components/Header/Header.module.css","reducer/ProfileReducer.js"],"names":["initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","LoginReduxForm","reduxForm","form","handleSubmit","error","captchaUrl","onSubmit","createField","requiredField","Input","src","alt","className","s","formError","connect","authUser","isAuth","loginData","getCaptchaUrl","to","email","password","remember","captcha","instanse","axios","baseURL","withCredentials","headers","GET","get","POST","post","DELETE","delete","PUT","put","UserAPI","getUsers","currentPage","pageSize","then","res","data","isUnfollow","userId","isFollow","ProfileAPI","getProfileUser","getStatus","updateStatus","status","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","getAuthData","login","logout","securityAPI","mapStateToPropsForRedirect","withAuthRedirect","Components","AuthRedirect","this","props","Component","setAuthUserData","payload","getCaptcha","getAuthUserData","dispatch","a","response","resultCode","length","stopSubmit","_error","logoutData","url","AuthReducer","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","Boolean","window","location","hostname","match","sidebarReducer","updateOdjcctInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsProgress","ToggleFollow","apiMethod","actionCreator","usersReducer","followed","totalCount","filter","initialized","appReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","formReducer","appInit","AppReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","nav","item","NavLink","activeClassName","activeLink","active","Paginator","onPageChanged","totalItemsCount","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","wrapper","onClick","selectedPage","p","key","pageActive","e","User","user","follow","unfollow","userPhoto","photos","small","disabled","some","Users","getUsersSuperSelector","createSelector","getIsFetching","getPageSize","getTotalUsersCount","getCurrentPage","getFollowingInProgress","getIsAuth","UsersContainer","pageNumber","getUsersThunk","page","isUnfollowThunk","isFollowThunk","Header","header","loginBlock","header_box","HeaderContainer","LoginContainer","Login","withSuspense","fallback","DialogsContainer","React","lazy","ProfileContainer","App","getInitializedApp","Switch","Route","exact","path","render","Redirect","AppContainer","withRouter","MainApp","BrowserRouter","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","value","maxLengthCreator","maxLength","Preloader","preloader","posts","likesCount","addPostActionCreator","newPostText","setStatusProfile","getProfileUsersThunk","getStatusUsersThunk","updateStatusUsersThunk","alert","file","getState","Promise","reject","newPost","postId"],"mappings":"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","file":"static/js/main.e0c28cd9.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\n\nlet initialState = {\n    dialogs: [\n        {id: 1, name: 'Dimych'},\n        {id: 2, name: 'Andrew'},\n    ],\n    messages: [\n        {id: 1, message: 'Hi'},\n        {id: 2, message: 'How is your it-kamasutra?'},\n    ],\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n\n\n    switch (action.type) {\n\n        case SEND_MESSAGE:\n            let body = action.newMessageBody;\n            return {\n                ...state,\n                messages: [...state.messages, {id: 6, message: body} ]\n            };\n        default:\n            return state;\n    }\n};\n\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\n\n\nexport default dialogsReducer;\n","module.exports = __webpack_public_path__ + \"static/media/myface.d28859c5.jpg\";","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../commons/FormsControls/FormControls\";\nimport {requiredField} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {getCaptchaUrl, loginData} from \"../../reducer/AuthReducer\";\nimport {Redirect} from \"react-router-dom\";\nimport s from '../commons/FormsControls/FormControl.module.css'\n\n\n\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField(\"email\", \"email\", requiredField, Input) }\n            {createField(\"password\", \"password\", requiredField, Input, {type:\"password\"}) }\n            {createField(null, \"remember\", null, Input, {type:\"checkbox\"}, \"Remember me\") }\n\n            {/*<div>*/}\n            {/*    <Field*/}\n            {/*        placeholder={\"password\"}*/}\n            {/*        component={Input}*/}\n            {/*        validate={requiredField}*/}\n            {/*        name={\"password\"}*/}\n            {/*        type={'password'}*/}\n            {/*    />*/}\n            {/*</div>*/}\n\n            {captchaUrl && <img src={captchaUrl} alt=\"captcha\"/> }\n            {captchaUrl && createField(\"enter symbols\", \"captcha\", requiredField, Input, {}) }\n\n            {error &&\n            <div className={s.formError}>\n                {error}\n            </div>\n            }\n\n            <div>\n                <button>Submit</button>\n            </div>\n        </form>\n    );\n};\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\n\n\nconst Login = ({loginData, isAuth, captchaUrl}) => {\n    const onSubmit = ({email, password, remember, captcha}) => {\n        loginData(email,password, remember, captcha)\n\n    };\n    if(isAuth) {\n        return <Redirect to={\"/profile\"} />\n    }\n\n    return (\n        <div>\n            <h1>login</h1>\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\n        </div>\n    );\n};\n\nconst mapStateToProps = ({authUser, captchaUrl}) => ({\n    captchaUrl: authUser.captchaUrl,\n    isAuth: authUser.isAuth\n});\n\nexport default connect(mapStateToProps, {loginData, getCaptchaUrl})(Login);","import * as axios from \"axios\";\n\nconst instanse = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials: true,\n    headers: {\"API-KEY\": '570cc637-8687-4ce8-a12d-511d5d729efe'}\n});\nconst GET = instanse.get;\nconst POST = instanse.post;\nconst DELETE = instanse.delete;\nconst PUT = instanse.put;\n\n\nexport const UserAPI = {\n    /*=== users container === */\n    getUsers(currentPage= 1, pageSize= 10) {\n        return GET(`users?page=${currentPage}&count=${pageSize}`).then(res => res.data);\n    },\n    /*=== users jsx === */\n    isUnfollow(userId) {\n        return DELETE(`follow/${userId}`).then(res => res.data);\n    },\n    isFollow(userId) {\n        return POST(`follow/${userId}`).then(res => res.data);\n    }\n};\n\n/*=== profile container === */\nexport const ProfileAPI = {\n    getProfileUser(userId) {\n        return GET(`profile/` + userId)\n    },\n    getStatus(userId) {\n        return GET(`profile/status/` + userId)\n    },\n    updateStatus(status) {\n        return PUT(`profile/status/`, {status: status});\n    },\n    savePhoto(photoFile) {\n        let formData = new FormData();\n        formData.append(\"image\", photoFile);\n        return PUT(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    },\n    saveProfile(profile) {\n        return PUT(`profile`, profile)\n    }\n};\n\n\n/*=== header container auth ===*/\nexport const getAuthData = () => {\n    return GET('auth/me');\n};\nexport const login = (email, password, remember = false, captcha = null) => {\n    return POST(`auth/login`, {email, password, remember, captcha});\n};\nexport const logout = () => {\n    return DELETE(`auth/login`);\n};\n\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return GET(\"security/get-captcha-url\")\n    }\n};\n\n\n","module.exports = __webpack_public_path__ + \"static/media/preloader.9064981b.svg\";","import {Redirect} from \"react-router-dom\";\nimport React, {Component} from 'react';\nimport {connect} from \"react-redux\";\n\nconst mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.authUser.isAuth,\n});\n\nexport const withAuthRedirect = (Components) => {\n    class AuthRedirect extends Component {\n        render() {\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>;\n            return <Components {...this.props}/>\n        }\n    }\n    const ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirect);\n    return ConnectAuthRedirectComponent\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\"};","import {getAuthData, login, logout, securityAPI} from \"../api/api\";\nimport {stopSubmit} from 'redux-form'\n\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\nconst GET_CAPTCHA_URL = 'auth/SET_USER_DATA';\n// const TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\n\n\nlet initialState = {\n    id: null,\n    login: null,\n    email: null,\n    // isFetching: false,\n    isAuth: false,\n    captchaUrl: null,\n};\n\nconst AuthReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n        case GET_CAPTCHA_URL:\n            return {\n                ...state,\n                ...action.payload,\n            };\n        // case TOGGLE_IS_FETCHING:\n        //     return {\n        //         ...state,\n        //         isFetching: action.isFetching,\n        //     };\n        default:\n            return state;\n    }\n};\n\n\nexport const setAuthUserData = (id, login, email, isAuth) => ({type: SET_USER_DATA, payload: {id, login, email, isAuth} });\nexport const getCaptcha = (captchaUrl) => ({type: GET_CAPTCHA_URL, payload: {captchaUrl}});\n// export const setIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\n\nexport const getAuthUserData = () => async (dispatch) => {\n    const response = await getAuthData();\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data;\n        dispatch(setAuthUserData(id, login, email, true))\n    }\n};\nexport const loginData = (email, password, remember, captcha) => async (dispatch) => {\n    const response = await login(email, password, remember, captcha);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    }  else {\n        if(response.data.resultCode === 10) {\n            dispatch(getCaptchaUrl())\n        }\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\n        dispatch(stopSubmit(\"login\", {_error: message}));\n    }\n};\nexport const logoutData = () => async (dispatch) => {\n    const response =  await logout();\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false))\n    }\n};\n\n\nexport const getCaptchaUrl = () => async (dispatch) => {\n    const response = await securityAPI.getCaptchaUrl();\n    const captchaUrl = response.data.url;\n        dispatch(getCaptcha(captchaUrl));\n};\n\n\n\n\n\n\n\n\nexport default AuthReducer;\n","import React from 'react'\nimport s from './FormControl.module.css'\nimport {requiredField} from \"../../../utils/validators/validators\";\nimport {Field} from \"redux-form\";\n\n\nconst FormControl = ({input, meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n};\n\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return (\n        <FormControl {...props}>\n            <textarea {...input} {...restProps}/>\n        </FormControl>\n    )\n};\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return (\n        <FormControl {...props}>\n            <input {...input} {...restProps}/>\n        </FormControl>\n    )\n};\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        {text}\n        <Field\n            placeholder={placeholder}\n            component={component}\n            validate={validators}\n            name={name}\n            {...props}\n        />\n    </div>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nconst initialState = {};\n\nconst sidebarReducer = (state = initialState, action) => {\n    return state;\n};\n\nexport default sidebarReducer;","export const updateOdjcctInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map(u => {\n        if(u[objPropName] === itemId) {\n            return {...u, ...newObjProps}\n        }\n        return u;\n    });\n};","import {UserAPI} from \"../api/api\";\nimport {updateOdjcctInArray} from \"../utils/helper/ojects-helper\";\n\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nconst TOGGLE_IS_PROGRESS = \"TOGGLE_IS_PROGRESS\";\n\n\nconst initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case FOLLOW:\n          return {\n              ...state,\n              users: updateOdjcctInArray(state.users, action.userId, \"id\", {followed: true} ),\n          };\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateOdjcctInArray(state.users, action.userId, \"id\", {followed: false} ),\n                // users: state.users.map(u => {\n                //     if(u.id === action.userId) {\n                //         return {...u, followed: false}\n                //     }\n                //     return u;\n                // })\n            };\n        case SET_USERS:\n            return {\n                ...state,\n                users: action.users,\n            };\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.currentPage,\n            };\n        case SET_TOTAL_USERS_COUNT:\n            return {\n                ...state,\n                totalUsersCount: action.totalCount,\n            };\n        case TOGGLE_IS_FETCHING:\n            return {\n                ...state,\n                isFetching: action.isFetching,\n            };\n        case TOGGLE_IS_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n\n            };\n        default: return state\n\n    }\n};\n\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId });\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId });\nexport const setUsers = (users) => ({type: SET_USERS, users });\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount});\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\nexport const toggleIsProgress = (isFetching, userId) => ({type: TOGGLE_IS_PROGRESS, isFetching, userId} );\n\n\nexport const getUsersThunk = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n        const data = await UserAPI.getUsers(page, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n};\n\n\nconst ToggleFollow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleIsProgress(true, userId));\n    const res = await apiMethod(userId);\n    if (res.data.resultCode === 0) {\n        dispatch(actionCreator(userId))\n    }\n    dispatch(toggleIsProgress(false, userId));\n};\nexport const isFollowThunk = (userId) => {\n    return async (dispatch) => {\n        ToggleFollow(dispatch, userId, UserAPI.isFollow(userId), followSuccess);\n\n        // dispatch(toggleIsProgress(true, userId));\n        // const res = await UserAPI.isFollow(userId);;\n        // if (res.data.resultCode === 0) {\n        //     dispatch(followSuccess(userId))\n        // }\n        // dispatch(toggleIsProgress(false, userId));\n    }\n};\nexport const isUnfollowThunk = (userId) => {\n    return async (dispatch) => {\n         ToggleFollow(dispatch, userId,  UserAPI.isUnfollow(userId), unfollowSuccess);\n\n        // dispatch(toggleIsProgress(true, userId));\n        // const res = await UserAPI.isUnfollow(userId);\n        // if (res.data.resultCode === 0) {\n        //     dispatch(unfollowSuccess(userId))\n        // }\n        // dispatch(toggleIsProgress(false, userId));\n    }\n};\n\n\n\n\n\n\nexport default usersReducer;","import {getAuthData, login, logout} from \"../api/api\";\nimport {stopSubmit} from 'redux-form'\nimport {getAuthUserData} from \"./AuthReducer\";\n\nconst SET_INITIALIZED = 'SET_INITIALIZED';\n\n\n\nlet initialState = {\n    initialized: false,\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_INITIALIZED:\n            return {\n                ...state,\n                initialized: true,\n            };\n        default:\n            return state;\n    }\n};\n\n\nexport const setInitializedSuccess = () => ({type: SET_INITIALIZED});\n\nexport const getInitializedApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n    promise.then(() => {\n        dispatch(setInitializedSuccess())\n    })\n};\nexport default appReducer;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"../reducer/ProfileReducer\";\nimport dialogsReducer from \"../reducer/DialogsReducer\";\nimport sidebarReducer from \"../reducer/sidebarReducer\";\nimport usersReducer from \"../reducer/UsersReducer\";\nimport AuthReducer from \"../reducer/AuthReducer\";\nimport AppReducer from \"../reducer/AppReducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {reducer as formReducer } from \"redux-form\";\n\n\n\nlet rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    authUser: AuthReducer,\n    form: formReducer,\n    appInit: AppReducer\n});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\n// let store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\n\nexport default store;","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Navbar = () => {\n    return (\n        <nav className={s.nav}>\n            <div className={s.item}>\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\n            </div>\n            <div className={`${s.item} ${s.active}`}>\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\n            </div>\n            <div className={s.item}>\n                <a>News</a>\n            </div>\n            <div className={s.item}>\n                <a>Music</a>\n            </div>\n            <div className={s.item}>\n                <a>Settings</a>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React, {useState} from 'react';\nimport s from \"./paginator.module.css\";\n// import cn from \"classnames\"\n\nconst Paginator = ({currentPage, onPageChanged, pageSize, totalItemsCount, portionSize = 10}) => {\n\n\n    let pagesCount = Math.ceil( totalItemsCount / pageSize);\n    let pages = [];\n    for (let i=1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return(\n        <div className={s.wrapper}>\n            { portionNumber > 1 &&\n                <button onClick={() => {setPortionNumber(portionNumber -1)}}>Prev</button> }\n            <div className={s.selectedPage}>\n            {pages\n                .filter(p => p>= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map(p => {\n                return <span\n                key={p}\n                className={currentPage === p && s.pageActive}\n                onClick={(e) => {onPageChanged(p)}}\n                >{p}</span>\n            })}\n                </div>\n\n            { portionCount > portionNumber &&\n            <button onClick={() => {setPortionNumber(portionNumber +1)}}>Next</button> }\n\n        </div>\n    )\n};\n\nexport default Paginator;","import React from 'react';\nimport s from \"./User.module.css\";\nimport userPhoto from \"../../assets/myface.jpg\";\nimport {NavLink} from \"react-router-dom\";\n\n\nconst User = ({user, followingInProgress, follow, unfollow}) => {\n    return (\n        <div>\n            <div>\n                    <span>\n                        <div>\n                            <NavLink to={'/profile/' + user.id}>\n                                  <img className={s.userPhoto}\n                                       src={user.photos.small !== null ? user.photos.small : userPhoto} alt=\"img\"/>\n                            </NavLink>\n\n                        </div>\n                    </span>\n                <span>\n                        <div>\n                            {user.followed\n                                ? <button\n                                    disabled={followingInProgress.some(id => id === user.id)}\n                                    onClick={() => {\n                                        unfollow(user.id)\n                                    }}>Unfollow</button>\n\n                                : <button\n                                    disabled={followingInProgress.some(id => id === user.id)}\n                                    onClick={() => {\n                                        follow(user.id)\n                                    }}>Follow</button>\n                            }\n                        </div>\n                    </span>\n                <span>\n                        <span>\n                            <div>{user.name}</div>\n                            <div>{user.status}</div>\n                        </span>\n                    </span>\n            </div>\n        </div>\n    )\n};\n\nexport default User;","import React from 'react';\nimport s from \"./User.module.css\";\nimport Paginator from \"../commons/Pagunator/Paginator\";\nimport User from \"./User\";\n\n\nconst Users = ({currentPage, users, onPageChanged, followingInProgress, follow, unfollow, totalUsersCount, pageSize }) => {\n\n\n    return(\n        <div className={s.wrapper}>\n            <Paginator\n                currentPage={currentPage}\n                onPageChanged={onPageChanged}\n                pageSize={pageSize}\n                totalItemsCount={totalUsersCount}\n            />\n\n            {users.map(user => (\n                    <User\n                        user={user}\n                        follow={follow}\n                        followingInProgress={followingInProgress}\n                        unfollow={unfollow}\n                        key={user.id}\n                    />\n                    ))\n            }\n\n        </div>\n    )\n};\n\nexport default Users;","import {createSelector} from 'reselect'\n\nexport const getUsersSelector = (state) => {\n    return state.usersPage.users\n};\nexport const getUsersSuperSelector = createSelector(getUsersSelector, (users) => {\n    return users.filter( u => true)\n});\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching\n};\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize\n};\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount\n};\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage\n};\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress\n};\nexport const getIsAuth= (state) => {\n    return state.authUser.isAuth\n};\n\n\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {\n    followSuccess,\n    unfollowSuccess,\n    setCurrentPage, toggleIsProgress, getUsersThunk, isUnfollowThunk, isFollowThunk\n} from \"../../reducer/UsersReducer\";\nimport Users from \"./Users.jsx\";\nimport Preloader from \"../commons/Preloader/preloader\";\nimport {withAuthRedirect} from \"../hoc/AuthRedirect\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsAuth, getIsFetching,\n    getPageSize,\n    getTotalUsersCount,\n    getUsers, getUsersSuperSelector\n} from \"./UsersSelectors\";\n\n\n\n\nclass UsersContainer extends Component {\n\n    componentDidMount() {\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize);\n        // this.props.toggleIsFetching(true);\n        // UserAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n        //         this.props.toggleIsFetching(false);\n        //         this.props.setUsers(data.items);\n        //         this.props.setTotalUsersCount(data.totalCount)\n        // })\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.getUsersThunk(pageNumber, this.props.pageSize);\n        // this.props.setCurrentPage(pageNumber);\n        // this.props.toggleIsFetching(true);\n        // UserAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n        //     this.props.toggleIsFetching(false);\n        //     this.props.setUsers(data.items)\n        // })\n    };\n\n    \n    render() {\n\n        return (\n            <> {\n                this.props.isFetching ?  <Preloader /> : null\n            }\n                <Users\n                    totalUsersCount={this.props.totalUsersCount}\n                    pageSize={this.props.pageSize}\n                    currentPage={this.props.currentPage}\n                    users={this.props.users}\n                    unfollow={this.props.unfollowSuccess}\n                    follow={this.props.followSuccess}\n                    onPageChanged={this.onPageChanged}\n                    followingInProgress={this.props.followingInProgress}\n\n\n                />\n            </>\n        )\n    }\n};\n\n// const mapStateToProps = (state) => {\n//     return {\n//         users: state.usersPage.users,\n//         pageSize: state.usersPage.pageSize,\n//         totalUsersCount: state.usersPage.totalUsersCount,\n//         currentPage: state.usersPage.currentPage,\n//         isFetching: state.usersPage.isFetching,\n//         followingInProgress: state.usersPage.followingInProgress,\n//         isAuth: state.authUser.isAuth,\n//     }\n// };\n\nconst mapStateToProps = (state) => {\n    return {\n        // users: getUsers(state),\n        users: getUsersSuperSelector(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state),\n        isAuth: getIsAuth(state),\n    }\n};\n\n\nexport default compose(\n    connect(mapStateToProps,\n        { followSuccess, unfollowSuccess,\n            setCurrentPage, toggleIsProgress,\n            getUsersThunk, isUnfollowThunk, isFollowThunk}),\n    // withAuthRedirect\n)(UsersContainer);\n\n","import React from 'react';\nimport s from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n    return <header className={s.header}>\n\n        <div className={s.loginBlock }>\n            { props.isAuth ?\n                <div className={s.header_box}>\n                    <div>\n                        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\n                       <span>{props.login}</span>\n                    </div>\n                    <div>\n                        <button onClick={props.logoutData}>log out</button>\n                    </div>\n                </div> :\n                <NavLink to={\"/login\"}>Login</NavLink>\n            }\n\n        </div>\n    </header>\n};\n\nexport default Header;","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport Header from \"./Header\";\nimport {logoutData} from \"../../reducer/AuthReducer\";\n\nclass HeaderContainer extends Component {\n\n\n    render() {\n        return (\n            <Header {...this.props}/>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n        return {\n            isAuth: state.authUser.isAuth,\n            login: state.authUser.login\n        }\n};\nexport default connect(mapStateToProps, {logoutData})(HeaderContainer) ;","import React, {Component} from 'react';\nimport Login from \"./Login\";\nimport {connect} from \"react-redux\";\n\n\nclass LoginContainer extends Component {\n    render() {\n        return (\n            <div>\n                <Login/>\n            </div>\n        );\n    }\n}\n\n\n\nexport default LoginContainer;","import React, {Suspense} from 'react';\n\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <Suspense fallback={<p>loading...</p>}><Component {...props} /></Suspense>\n    }\n};\n","import React, {Component, Suspense} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {HashRouter, BrowserRouter, Route, withRouter, Switch, Redirect} from \"react-router-dom\";\n\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginContainer from \"./components/Login/LoginContainer\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {getInitializedApp} from \"./reducer/AppReducer\";\nimport Preloader from \"./components/commons/Preloader/preloader\";\nimport store from \"./redux/reduxStore\";\nimport {withSuspense} from \"./components/hoc/withSuspense\";\nimport ProfileStatus from \"./components/Profile/ProfileInfo/ProfileStatus\";\n\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\nconst DialogsContainer = React.lazy(() => import( \"./components/Dialogs/DialogsContainer\"));\nconst ProfileContainer = React.lazy(() => import( \"./components/Profile/ProfileContainer\"));\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.getInitializedApp();\n    }\n\n    render() {\n        return (\n            <>\n                {!this.props.initialized ?\n                    <Preloader/> :\n\n                    <div className='app-wrapper'>\n                        <HeaderContainer/>\n                        <Navbar/>\n                        <div className='app-wrapper-content'>\n                            <Switch>\n                                <Route exact path='/'\n                                       render={() => <Redirect to={\"/profile\"} /> }/>\n                                <Route path='/dialogs'\n                                       render={withSuspense(DialogsContainer)}/>\n                                <Route path='/profile/:userId?'\n                                       render={withSuspense(ProfileContainer)}/>\n                                <Route path='/users'\n                                       render={() => <UsersContainer/>}/>\n                                <Route path='/login/test'\n                                       render={() => <div>Test</div>}/>\n                                <Route path='/login'\n                                       render={() => <LoginContainer/>}/>\n\n                                <Route path='*'\n                                       render={() => <div>404 not found</div>}/>\n                            </Switch>\n                        </div>\n                    </div>\n                }\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.appInit.initialized\n});\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {getInitializedApp}))(App);\n\nconst MainApp = (props) => (\n//     <HashRouter >\n//     <Provider store={store}>\n//     <AppContainer/>\n//     </Provider>\n// </HashRouter>\n\n    <BrowserRouter >\n    <Provider store={store}>\n    <AppContainer/>\n    </Provider>\n</BrowserRouter>\n\n);\nexport default MainApp","import React, {Component} from 'react'\n\n\nclass ProfileStatus extends Component {\n\n    state = {\n       editMode: false,\n        status: this.props.status\n    };\n\n    // toggleEditMode = () => {\n    //   this.setState({\n    //      editMode: !this.state.editMode\n    //   });\n    //     this.props.updateStatus(this.state.status);\n    // };\n\n    activateEditMode = () => {\n        this.setState({\n            editMode: true\n        });\n    }\n\n    deactivateEditMode() {\n        this.setState({\n            editMode: false\n        });\n        this.props.updateStatus(this.state.status);\n    }\n\n    onStatusChange = (e) => {\n        this.setState({\n            status: e.currentTarget.value\n        })\n    };\n\n    render() {\n        return (\n            <div>\n                { !this.state.editMode\n                    ? <div><span onDoubleClick={this.activateEditMode}>{this.props.status || \"no status\"}</span></div>\n                    : <div>\n                        <input autoFocus\n                               onBlur={this.deactivateEditMode}\n                               value={this.state.status}\n                                onChange={this.onStatusChange}\n                        />\n                      </div>\n                }\n            </div>\n        );\n    }\n};\n\nexport default ProfileStatus;","import * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from \"./redux/reduxStore\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <MainApp />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","export const requiredField = value => {\n    if(value)return undefined;\n    return 'field is required';\n};\n\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return 'max length is 30 symbols';\n    return undefined\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__2UROS\",\"error\":\"FormControl_error__3uDVr\",\"formError\":\"FormControl_formError__3RhK5\"};","import React from 'react';\nimport preloader from \"../../../assets/preloader.svg\";\n\nconst Preloader = () => {\n    return (\n        <div>\n            <img src={preloader} alt=\"loading...\"/>\n        </div>\n    );\n};\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"User_userPhoto__3f4lR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageActive\":\"paginator_pageActive__2OXVW\",\"selectedPage\":\"paginator_selectedPage__2GfUM\",\"wrapper\":\"paginator_wrapper__3-3z3\",\"wrapperBorder\":\"paginator_wrapperBorder__2KLjy\",\"pageBlack\":\"paginator_pageBlack__26BGl\",\"pageNumber\":\"paginator_pageNumber__1_M4k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"header_box\":\"Header_header_box__nJ1H3\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import {ProfileAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst ADD_POST = \"ADD-POST\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_USER_STATUS = \"SET_USER_STATUS\";\n\nconst DELETE_POST = \"DELETE_POST\";\nconst SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\";\n\n\nconst initialState = {\n    posts: [\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\n        {id: 3, message: 'Blabla', likesCount: 11},\n        {id: 4, message: 'Dada', likesCount: 11}\n    ],\n    profile: null,\n    status: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n        switch (action.type) {\n            case ADD_POST:\n                let newPost = {\n                        id: 5,\n                        message: action.newPostText,\n                        likesCount: 0\n                };\n                return {\n                    ...state,\n                    posts: [...state.posts, newPost],\n                    newPostText: '',\n                };\n\n            case SET_USER_PROFILE:\n                return {\n                    ...state,\n                    profile: action.profile\n                };\n            case SET_USER_STATUS:\n                return {\n                    ...state,\n                    status: action.status\n                };\n            case DELETE_POST:\n                return {\n                    ...state,\n                    posts: state.posts.filter(p => p.id !== action.postId)\n                };\n            case SAVE_PHOTO_SUCCESS:\n                return {\n                    ...state,\n                    profile: {...state.profile, photos: action.photos}\n                };\n            default:\n                return state;\n        }\n};\n\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile });\nexport const setStatusProfile = (status) => ({type: SET_USER_STATUS, status });\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\n\n\nexport const getProfileUsersThunk = (userId) => async (dispatch) => {\n    const response = await ProfileAPI.getProfileUser(userId);\n    dispatch(setUserProfile(response.data))\n\n};\nexport const getStatusUsersThunk = (userId) => async (dispatch) => {\n    const response = await ProfileAPI.getStatus(userId);\n    dispatch(setStatusProfile(response.data))\n};\nexport const updateStatusUsersThunk = (status) => async (dispatch) => {\n    \n    try{\n\n        const response = await ProfileAPI.updateStatus(status);\n        if (response.data.resultCode === 0) {\n            dispatch(setStatusProfile(status))\n        }\n    } catch (error) {\n        alert(error)\n    }\n    \n};\n\nexport const savePhoto = (file) => async (dispatch) => {\n    const response = await ProfileAPI.savePhoto(file);\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos))\n    }\n};\nexport const saveProfile = (profile) => async (dispatch, getState) => {\n    const userId = getState().authUser.id;\n    const response = await ProfileAPI.saveProfile(profile);\n    if (response.data.resultCode === 0) {\n        dispatch(getProfileUsersThunk(userId))\n    } else {\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\n        return Promise.reject(response.data.messages[0])\n    }\n};\n\n\nexport default profileReducer;"],"sourceRoot":""}