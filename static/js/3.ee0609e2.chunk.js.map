{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","editStatus","newStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","alt","fullName","aboutMe","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","requiredField","name","MyPosts","postsElements","posts","map","p","key","postsBlock","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","loginUserId","history","push","getProfileUsersThunk","getStatusUsersThunk","prevProps","prevState","snapshot","setState","updateStatusUsersThunk","Component","compose","authUser","id","isAuth","withRouter"],"mappings":"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","file":"static/js/3.ee0609e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3kj8s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock___eEs9\",\"posts\":\"MyPosts_posts__1W4wc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2Asdj\"};","import React, {useEffect, useState} from 'react'\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) =>  {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [editStatus, newStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        newStatus(props.status)\r\n    }, [props.status]);\r\n\r\n\r\n    const activateMode = () => {\r\n          setEditMode(true)\r\n    };\r\n    const outMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(editStatus);\r\n    };\r\n    const onStatusChange = (e) => {\r\n        newStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div><span onDoubleClick={activateMode} >{props.status || \"no status\"}</span></div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus\r\n                       onBlur={outMode}\r\n                       value={editStatus}\r\n                       onChange={onStatusChange}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../commons/Preloader/preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    if(!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/*<div>*/}\r\n            {/*    <img*/}\r\n            {/*        src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'/>*/}\r\n            {/*</div>*/}\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} alt=\"photo\"/>\r\n                <h1>{profile.fullName}</h1>\r\n                <h3>{profile.aboutMe}</h3>\r\n                <ProfileStatusWithHooks\r\n                    status={status}\r\n                       updateStatus={updateStatus}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../commons/FormsControls/FormControls\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements =\r\n        props.posts.map( p => <Post key={p.message} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    // let newPostElement = React.createRef();\r\n\r\n    let addNewPostText = (value) => {\r\n        props.addPost(value.newPostText)\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostReduxForm\r\n                onSubmit={addNewPostText}\r\n            />\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nconst addNewPostForm = (props) => (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field\r\n                placeholder={\"enter text\"}\r\n                component={Textarea}\r\n                validate={[requiredField, maxLength10]}\r\n                name={\"newPostText\"} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n);\r\nconst AddNewPostReduxForm = reduxForm({form: 'ProfileAddNewPostForm'})(addNewPostForm);\r\n\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../reducer/ProfileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      posts: state.profilePage.posts,\r\n      newPostText: state.profilePage.newPostText\r\n  }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer  />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Profile from \"./Profile\";\r\nimport {getProfileUsersThunk, getStatusUsersThunk, updateStatusUsersThunk} from \"../../reducer/ProfileReducer\";\r\nimport { withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.loginUserId;\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getProfileUsersThunk(userId);\r\n        this.props.getStatusUsersThunk(userId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                        updateStatus={this.props.updateStatusUsersThunk}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    loginUserId: state.authUser.id,\r\n    isAuth: state.authUser.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getProfileUsersThunk, getStatusUsersThunk, updateStatusUsersThunk}),\r\n    withRouter,\r\n    // withAuthRedirect,\r\n)\r\n(ProfileContainer);"],"sourceRoot":""}