{"version":3,"sources":["reducer/DialogsReducer.js","assets/myface.jpg","assets/preloader.svg","components/hoc/AuthRedirect.js","components/Profile/ProfileInfo/ProfileStatus.js","api/api.js","components/Navbar/Navbar.module.css","serviceWorker.js","reducer/sidebarReducer.js","utils/helper/ojects-helper.js","reducer/UsersReducer.js","reducer/AuthReducer.js","reducer/AppReducer.js","redux/reduxStore.js","components/Navbar/Navbar.jsx","components/commons/Pagunator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/Users/UsersSelectors.js","components/Users/UsersContainer.js","components/Header/Header.jsx","components/Header/HeaderContainer.js","components/Login/Login.jsx","components/Login/LoginContainer.js","components/hoc/withSuspense.js","App.js","index.js","components/commons/FormsControls/FormControls.js","components/commons/FormsControls/FormControl.module.css","utils/validators/validators.js","components/commons/Preloader/preloader.js","components/Users/User.module.css","components/commons/Pagunator/paginator.module.css","components/Header/Header.module.css","reducer/ProfileReducer.js"],"names":["initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","mapStateToPropsForRedirect","isAuth","authUser","withAuthRedirect","Components","AuthRedirect","this","props","to","Component","connect","instanse","axios","baseURL","withCredentials","headers","GET","get","POST","post","DELETE","delete","PUT","put","UserAPI","getUsers","currentPage","pageSize","then","res","data","isUnfollow","userId","isFollow","ProfileAPI","getProfileUser","getStatus","updateStatus","status","getAuthData","login","email","password","remember","logout","Boolean","window","location","hostname","match","sidebarReducer","updateOdjcctInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsProgress","ToggleFollow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","totalCount","filter","setAuthUserData","payload","getAuthUserData","response","AuthReducer","initialized","appReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","form","formReducer","appInit","AppReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","s","nav","item","NavLink","activeClassName","activeLink","active","Paginator","onPageChanged","totalItemsCount","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","wrapper","onClick","selectedPage","p","key","pageActive","e","User","user","follow","unfollow","userPhoto","src","photos","small","alt","disabled","some","Users","getUsersSuperSelector","createSelector","getIsFetching","getPageSize","getTotalUsersCount","getCurrentPage","getFollowingInProgress","getIsAuth","UsersContainer","pageNumber","getUsersThunk","page","isUnfollowThunk","isFollowThunk","Header","header","loginBlock","logoutData","HeaderContainer","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","createField","requiredField","Input","formError","loginData","length","stopSubmit","_error","Redirect","LoginContainer","withSuspense","fallback","DialogsContainer","React","lazy","ProfileContainer","App","getInitializedApp","Route","path","render","AppContainer","withRouter","MainApp","BrowserRouter","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","value","maxLengthCreator","maxLength","Preloader","preloader","posts","likesCount","profile","addPostActionCreator","newPostText","setStatusProfile","getProfileUsersThunk","getStatusUsersThunk","updateStatusUsersThunk","newPost","postId"],"mappings":"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","file":"static/js/main.75bb9c7a.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body} ]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\n\r\nexport default dialogsReducer;\r\n","module.exports = __webpack_public_path__ + \"static/media/myface.d28859c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.9064981b.svg\";","import {Redirect} from \"react-router-dom\";\r\nimport React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.authUser.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Components) => {\r\n    class AuthRedirect extends Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Components {...this.props}/>\r\n        }\r\n    }\r\n    const ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirect);\r\n    return ConnectAuthRedirectComponent\r\n};\r\n","import React, {Component} from 'react'\r\n\r\n\r\nclass ProfileStatus extends Component {\r\n\r\n    state = {\r\n       editMode: false,\r\n        status: this.props.status\r\n    };\r\n\r\n    // toggleEditMode = () => {\r\n    //   this.setState({\r\n    //      editMode: !this.state.editMode\r\n    //   });\r\n    //     this.props.updateStatus(this.state.status);\r\n    // };\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode() {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                { !this.state.editMode\r\n                    ? <div><span onDoubleClick={this.activateEditMode}>{this.props.status || \"no status\"}</span></div>\r\n                    : <div>\r\n                        <input autoFocus\r\n                               onBlur={this.deactivateEditMode}\r\n                               value={this.state.status}\r\n                                onChange={this.onStatusChange}\r\n                        />\r\n                      </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ProfileStatus;","import * as axios from \"axios\";\r\n\r\nconst instanse = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": '570cc637-8687-4ce8-a12d-511d5d729efe'}\r\n});\r\nconst GET = instanse.get;\r\nconst POST = instanse.post;\r\nconst DELETE = instanse.delete;\r\nconst PUT = instanse.put;\r\n\r\n\r\nexport const UserAPI = {\r\n    /*=== users container === */\r\n    getUsers(currentPage= 1, pageSize= 10) {\r\n        return GET(`users?page=${currentPage}&count=${pageSize}`).then(res => res.data);\r\n    },\r\n    /*=== users jsx === */\r\n    isUnfollow(userId) {\r\n        return DELETE(`follow/${userId}`).then(res => res.data);\r\n    },\r\n    isFollow(userId) {\r\n        return POST(`follow/${userId}`).then(res => res.data);\r\n    }\r\n};\r\n\r\n/*=== profile container === */\r\nexport const ProfileAPI = {\r\n    getProfileUser(userId) {\r\n        return GET(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return GET(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return PUT(`profile/status/`, {status: status});\r\n    }\r\n};\r\n\r\n\r\n/*=== header container auth ===*/\r\nexport const getAuthData = () => {\r\n    return GET('auth/me');\r\n};\r\nexport const login = (email, password, remember = false) => {\r\n    return POST(`auth/login`, {email, password, remember});\r\n};\r\nexport const logout = () => {\r\n    return DELETE(`auth/login`);\r\n};\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__cmi6k\",\"item\":\"Navbar_item__2HxTf\",\"activeLink\":\"Navbar_activeLink__1EauI\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nconst initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","export const updateOdjcctInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if(u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    });\r\n};","import {UserAPI} from \"../api/api\";\r\nimport {updateOdjcctInArray} from \"../utils/helper/ojects-helper\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_PROGRESS = \"TOGGLE_IS_PROGRESS\";\r\n\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n          return {\r\n              ...state,\r\n              users: updateOdjcctInArray(state.users, action.userId, \"id\", {followed: true} ),\r\n          };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateOdjcctInArray(state.users, action.userId, \"id\", {followed: false} ),\r\n                // users: state.users.map(u => {\r\n                //     if(u.id === action.userId) {\r\n                //         return {...u, followed: false}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage,\r\n            };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount,\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            };\r\n        case TOGGLE_IS_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n\r\n            };\r\n        default: return state\r\n\r\n    }\r\n};\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleIsProgress = (isFetching, userId) => ({type: TOGGLE_IS_PROGRESS, isFetching, userId} );\r\n\r\n\r\nexport const getUsersThunk = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        const data = await UserAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n};\r\n\r\n\r\nconst ToggleFollow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsProgress(true, userId));\r\n    const res = await apiMethod(userId);\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsProgress(false, userId));\r\n};\r\nexport const isFollowThunk = (userId) => {\r\n    return async (dispatch) => {\r\n        ToggleFollow(dispatch, userId, UserAPI.isFollow(userId), followSuccess);\r\n\r\n        // dispatch(toggleIsProgress(true, userId));\r\n        // const res = await UserAPI.isFollow(userId);;\r\n        // if (res.data.resultCode === 0) {\r\n        //     dispatch(followSuccess(userId))\r\n        // }\r\n        // dispatch(toggleIsProgress(false, userId));\r\n    }\r\n};\r\nexport const isUnfollowThunk = (userId) => {\r\n    return async (dispatch) => {\r\n         ToggleFollow(dispatch, userId,  UserAPI.isUnfollow(userId), unfollowSuccess);\r\n\r\n        // dispatch(toggleIsProgress(true, userId));\r\n        // const res = await UserAPI.isUnfollow(userId);\r\n        // if (res.data.resultCode === 0) {\r\n        //     dispatch(unfollowSuccess(userId))\r\n        // }\r\n        // dispatch(toggleIsProgress(false, userId));\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default usersReducer;","import {getAuthData, login, logout} from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\n// const TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    // isFetching: false,\r\n    isAuth: false\r\n};\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        // case TOGGLE_IS_FETCHING:\r\n        //     return {\r\n        //         ...state,\r\n        //         isFetching: action.isFetching,\r\n        //     };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setAuthUserData = (id, login, email, isAuth) => ({type: SET_USER_DATA, payload: {id, login, email, isAuth} });\r\n// export const setIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await getAuthData();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, login, email, true))\r\n    }\r\n};\r\nexport const loginData = (email, password, remember) => async (dispatch) => {\r\n    const response = await login(email, password, remember);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n};\r\nexport const logoutData = () => async (dispatch) => {\r\n    const response =  await logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default AuthReducer;\r\n","import {getAuthData, login, logout} from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form'\r\nimport {getAuthUserData} from \"./AuthReducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setInitializedSuccess = () => ({type: SET_INITIALIZED});\r\n\r\nexport const getInitializedApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(setInitializedSuccess())\r\n    })\r\n};\r\nexport default appReducer;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"../reducer/ProfileReducer\";\r\nimport dialogsReducer from \"../reducer/DialogsReducer\";\r\nimport sidebarReducer from \"../reducer/sidebarReducer\";\r\nimport usersReducer from \"../reducer/UsersReducer\";\r\nimport AuthReducer from \"../reducer/AuthReducer\";\r\nimport AppReducer from \"../reducer/AppReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer } from \"redux-form\";\r\n\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    authUser: AuthReducer,\r\n    form: formReducer,\r\n    appInit: AppReducer\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n// let store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\r\nimport s from \"./paginator.module.css\";\r\n\r\n\r\nconst Paginator = ({currentPage, onPageChanged, pageSize, totalItemsCount, portionSize = 10}) => {\r\n\r\n\r\n    let pagesCount = Math.ceil( totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i=1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return(\r\n        <div className={s.wrapper}>\r\n            { portionNumber > 1 &&\r\n                <button onClick={() => {setPortionNumber(portionNumber -1)}}>Prev</button> }\r\n            <div className={s.selectedPage}>\r\n            {pages\r\n                .filter(p => p>= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                return <span\r\n                key={p}\r\n                className={currentPage === p && s.pageActive}\r\n                onClick={(e) => {onPageChanged(p)}}\r\n                >{p}</span>\r\n            })}\r\n                </div>\r\n\r\n            { portionCount > portionNumber &&\r\n            <button onClick={() => {setPortionNumber(portionNumber +1)}}>Next</button> }\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport s from \"./User.module.css\";\r\nimport userPhoto from \"../../assets/myface.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst User = ({user, followingInProgress, follow, unfollow}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + user.id}>\r\n                                  <img className={s.userPhoto}\r\n                                       src={user.photos.small !== null ? user.photos.small : userPhoto} alt=\"img\"/>\r\n                            </NavLink>\r\n\r\n                        </div>\r\n                    </span>\r\n                <span>\r\n                        <div>\r\n                            {user.followed\r\n                                ? <button\r\n                                    disabled={followingInProgress.some(id => id === user.id)}\r\n                                    onClick={() => {\r\n                                        unfollow(user.id)\r\n                                    }}>Unfollow</button>\r\n\r\n                                : <button\r\n                                    disabled={followingInProgress.some(id => id === user.id)}\r\n                                    onClick={() => {\r\n                                        follow(user.id)\r\n                                    }}>Follow</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                <span>\r\n                        <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                    </span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport s from \"./User.module.css\";\r\nimport Paginator from \"../commons/Pagunator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nconst Users = ({currentPage, users, onPageChanged, followingInProgress, follow, unfollow, totalUsersCount, pageSize }) => {\r\n\r\n\r\n    return(\r\n        <div className={s.wrapper}>\r\n            <Paginator\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                pageSize={pageSize}\r\n                totalItemsCount={totalUsersCount}\r\n            />\r\n\r\n            {users.map(user => (\r\n                    <User\r\n                        user={user}\r\n                        follow={follow}\r\n                        followingInProgress={followingInProgress}\r\n                        unfollow={unfollow}\r\n                        key={user.id}\r\n                    />\r\n                    ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users;","import {createSelector} from 'reselect'\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n};\r\nexport const getUsersSuperSelector = createSelector(getUsersSelector, (users) => {\r\n    return users.filter( u => true)\r\n});\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n};\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n};\r\nexport const getIsAuth= (state) => {\r\n    return state.authUser.isAuth\r\n};\r\n\r\n\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {\r\n    followSuccess,\r\n    unfollowSuccess,\r\n    setCurrentPage, toggleIsProgress, getUsersThunk, isUnfollowThunk, isFollowThunk\r\n} from \"../../reducer/UsersReducer\";\r\nimport Users from \"./Users.jsx\";\r\nimport Preloader from \"../commons/Preloader/preloader\";\r\nimport {withAuthRedirect} from \"../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsAuth, getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers, getUsersSuperSelector\r\n} from \"./UsersSelectors\";\r\n\r\n\r\n\r\n\r\nclass UsersContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize);\r\n        // this.props.toggleIsFetching(true);\r\n        // UserAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n        //         this.props.toggleIsFetching(false);\r\n        //         this.props.setUsers(data.items);\r\n        //         this.props.setTotalUsersCount(data.totalCount)\r\n        // })\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsersThunk(pageNumber, this.props.pageSize);\r\n        // this.props.setCurrentPage(pageNumber);\r\n        // this.props.toggleIsFetching(true);\r\n        // UserAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\r\n        //     this.props.toggleIsFetching(false);\r\n        //     this.props.setUsers(data.items)\r\n        // })\r\n    };\r\n\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <> {\r\n                this.props.isFetching ?  <Preloader /> : null\r\n            }\r\n                <Users\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    users={this.props.users}\r\n                    unfollow={this.props.unfollowSuccess}\r\n                    follow={this.props.followSuccess}\r\n                    onPageChanged={this.onPageChanged}\r\n                    followingInProgress={this.props.followingInProgress}\r\n\r\n\r\n                />\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress,\r\n//         isAuth: state.authUser.isAuth,\r\n//     }\r\n// };\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // users: getUsers(state),\r\n        users: getUsersSuperSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isAuth: getIsAuth(state),\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        { followSuccess, unfollowSuccess,\r\n            setCurrentPage, toggleIsProgress,\r\n            getUsersThunk, isUnfollowThunk, isFollowThunk}),\r\n    // withAuthRedirect\r\n)(UsersContainer);\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth ?\r\n                <span>{props.login} - <button onClick={props.logoutData}>log out</button></span> :\r\n                <NavLink to={\"/login\"}>Login</NavLink>\r\n            }\r\n\r\n        </div>\r\n    </header>\r\n};\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Header from \"./Header\";\r\nimport {logoutData} from \"../../reducer/AuthReducer\";\r\n\r\nclass HeaderContainer extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.authUser.isAuth,\r\n            login: state.authUser.login\r\n        }\r\n};\r\nexport default connect(mapStateToProps, {logoutData})(HeaderContainer) ;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../commons/FormsControls/FormControls\";\r\nimport {requiredField} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginData} from \"../../reducer/AuthReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from '../commons/FormsControls/FormControl.module.css'\r\n\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"email\", \"email\", requiredField, Input) }\r\n            {createField(\"password\", \"password\", requiredField, Input, {type:\"password\"}) }\r\n            {createField(null, \"remember\", null, Input, {type:\"checkbox\"}, \"Remember me\") }\r\n\r\n            {/*<div>*/}\r\n            {/*    <Field*/}\r\n            {/*        placeholder={\"password\"}*/}\r\n            {/*        component={Input}*/}\r\n            {/*        validate={requiredField}*/}\r\n            {/*        name={\"password\"}*/}\r\n            {/*        type={'password'}*/}\r\n            {/*    />*/}\r\n            {/*</div>*/}\r\n            {error &&\r\n            <div className={s.formError}>\r\n                {error}\r\n            </div>\r\n            }\r\n\r\n            <div>\r\n                <button>Submit</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\n\r\nconst Login = ({loginData, isAuth}) => {\r\n    const onSubmit = ({email, password, remember}) => {\r\n        loginData(email,password, remember)\r\n\r\n    };\r\n    if(isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({authUser}) => ({\r\n    isAuth: authUser.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {loginData})(Login);","import React, {Component} from 'react';\r\nimport Login from \"./Login\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass LoginContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Login/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default LoginContainer;","import React, {Suspense} from 'react';\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<p>loading...</p>}><Component {...props} /></Suspense>\r\n    }\r\n};\r\n","import React, {Component, Suspense} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\n\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\n\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginContainer from \"./components/Login/LoginContainer\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {getInitializedApp} from \"./reducer/AppReducer\";\r\nimport Preloader from \"./components/commons/Preloader/preloader\";\r\nimport store from \"./redux/reduxStore\";\r\nimport {withSuspense} from \"./components/hoc/withSuspense\";\r\nimport ProfileStatus from \"./components/Profile/ProfileInfo/ProfileStatus\";\r\n\r\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nconst DialogsContainer = React.lazy(() => import( \"./components/Dialogs/DialogsContainer\"));\r\nconst ProfileContainer = React.lazy(() => import( \"./components/Profile/ProfileContainer\"));\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.getInitializedApp()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {!this.props.initialized ?\r\n                    <Preloader/> :\r\n\r\n                    <div className='app-wrapper'>\r\n                        <HeaderContainer/>\r\n                        <Navbar/>\r\n                        <div className='app-wrapper-content'>\r\n                            <Route path='/dialogs'\r\n                                   render={withSuspense(DialogsContainer)}/>\r\n                            <Route path='/profile/:userId?'\r\n                                   render={withSuspense(ProfileContainer)}/>\r\n                            <Route path='/users'\r\n                                   render={() => <UsersContainer/>}/>\r\n                            <Route path='/login'\r\n                                   render={() => <LoginContainer/>}/>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.appInit.initialized\r\n});\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {getInitializedApp}))(App);\r\n\r\nconst MainApp = (props) => (\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n);\r\nexport default MainApp","import * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport store from \"./redux/reduxStore\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainApp from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n    <MainApp />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","import React from 'react'\r\nimport s from './FormControl.module.css'\r\nimport {requiredField} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n};\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        {text}\r\n        <Field\r\n            placeholder={placeholder}\r\n            component={component}\r\n            validate={validators}\r\n            name={name}\r\n            {...props}\r\n        />\r\n    </div>\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__3kUCP\",\"error\":\"FormControl_error__3qn49\",\"formError\":\"FormControl_formError__3q-Rn\"};","export const requiredField = value => {\r\n    if(value)return undefined;\r\n    return 'field is required';\r\n};\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return 'max length is 30 symbols';\r\n    return undefined\r\n};","import React from 'react';\r\nimport preloader from \"../../../assets/preloader.svg\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=\"loading...\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"User_userPhoto__1SOpA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageActive\":\"paginator_pageActive__3N5km\",\"selectedPage\":\"paginator_selectedPage__UEren\",\"wrapper\":\"paginator_wrapper__1uWyq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Q5Hm\",\"loginBlock\":\"Header_loginBlock__BcqnL\"};","import {ProfileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_USER_STATUS = \"SET_USER_STATUS\";\r\n\r\nconst DELETE_POST = \"DELETE_POST\";\r\n\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n            case ADD_POST:\r\n                let newPost = {\r\n                        id: 5,\r\n                        message: action.newPostText,\r\n                        likesCount: 0\r\n                };\r\n                return {\r\n                    ...state,\r\n                    posts: [...state.posts, newPost],\r\n                    newPostText: '',\r\n                };\r\n\r\n            case SET_USER_PROFILE:\r\n                return {\r\n                    ...state,\r\n                    profile: action.profile\r\n                };\r\n            case SET_USER_STATUS:\r\n                return {\r\n                    ...state,\r\n                    status: action.status\r\n                };\r\n            case DELETE_POST:\r\n                return {\r\n                    ...state,\r\n                    posts: state.posts.filter(p => p.id !== action.postId)\r\n                };\r\n            default: return state;\r\n        }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile });\r\nexport const setStatusProfile = (status) => ({type: SET_USER_STATUS, status });\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\n\r\nexport const getProfileUsersThunk = (userId) => async (dispatch) => {\r\n    const response = await ProfileAPI.getProfileUser(userId);\r\n    dispatch(setUserProfile(response.data))\r\n\r\n};\r\nexport const getStatusUsersThunk = (userId) => async (dispatch) => {\r\n    const response = await ProfileAPI.getStatus(userId);\r\n    dispatch(setStatusProfile(response.data))\r\n};\r\nexport const updateStatusUsersThunk = (status) => async (dispatch) => {\r\n    const response = await ProfileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatusProfile(status))\r\n    }\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}